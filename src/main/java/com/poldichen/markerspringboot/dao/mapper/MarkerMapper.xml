<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.poldichen.markerspringboot.dao.IMarkerDao">

    <resultMap type="com.poldichen.markerspringboot.entity.Marker" id="markerMap">
        <id property="id" column="id" />
        <result property="title" column="title" />
        <result property="content" column="content" />

        <collection property="labels" ofType="com.poldichen.markerspringboot.entity.Label">
            <id property="id" column="id" />
            <result property="name" column="name" />
        </collection>
    </resultMap>

    <select id="getAll" resultMap="markerMap">
        SELECT * FROM marker m
        inner join marker_label ml on m.id = ml.marker_id
        inner join label b on ml.label_id = b.id
    </select>

    <insert id="createOne" parameterType="com.poldichen.markerspringboot.entity.Marker" useGeneratedKeys="true" keyProperty="marker.id">
        insert into marker (title, content, author, update_date)
        values (#{marker.title}, #{marker.content}, #{marker.author}, #{marker.updateDate})
    </insert>

    <insert id="createMarkerLabel" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into marker_label (marker_id, label_id) values
        <foreach collection="label_ids" item="item" index="index" separator=",">
            (
            #{marker_id},
            #{item}
            )
        </foreach>
    </insert>

    <update id="updateOne" parameterType="com.poldichen.markerspringboot.entity.Marker">
        update marker set
        title = #{marker.title},
        content = #{marker.content},
        author = #{marker.author},
        update_date = #{marker.updateDate}
        where id = #{marker.id}
    </update>

    <delete id="deleteMarkerLabel">
        delete from marker_label where marker_id = #{marker_id}
    </delete>

</mapper>